### ValiTrack - Stock Product API Examples

#### Contexto e Necessidade

Este arquivo contém exemplos de requisições HTTP para a API de produtos em estoque do sistema ValiTrack. Ele serve como documentação prática e guia para desenvolvedores, testadores e integradores que precisam interagir com os endpoints REST relacionados ao controle de estoque de produtos.

A necessidade deste arquivo se dá para facilitar o entendimento de como consumir a API, quais rotas estão disponíveis, quais parâmetros são esperados e exemplos de payloads para criação e atualização de produtos. Isso agiliza o desenvolvimento de integrações, testes manuais (por exemplo, via ferramentas como VSCode REST Client, Insomnia ou Postman) e garante que todos os envolvidos tenham um ponto de referência claro sobre o funcionamento da API.

Os exemplos cobrem operações essenciais como:
- Listagem de todos os produtos em estoque
- Busca por ID, código interno ou status
- Consulta de produtos próximos ao vencimento
- Cadastro, atualização e remoção de produtos
- Verificação de existência de um produto

Além disso, são explicados os valores possíveis para os campos de status e prioridade, fundamentais para o correto uso da API.

---

### 1. Listar todos os produtos em estoque
GET {{host}}/stock-products
Accept: application/json

###

### 2. Buscar produto por ID
GET {{host}}/stock-products/1
Accept: application/json

###

### 3. Buscar produtos por código interno
GET {{host}}/stock-products/by-code/PROD001
Accept: application/json

###

### 4. Buscar produtos por status
GET {{host}}/stock-products/by-status/1
Accept: application/json

###

### 5. Buscar produtos próximos ao vencimento (7 dias por padrão)
GET {{host}}/stock-products/expiring
Accept: application/json

###

### 6. Buscar produtos próximos ao vencimento (data específica)
GET {{host}}/stock-products/expiring?expirationDate=2024-12-31
Accept: application/json

###

### 7. Cadastrar novo produto no estoque
POST {{host}}/stock-products
Content-Type: application/json

{
  "internalCode": "PROD001",
  "expirationDate": "2024-12-31",
  "unitType": "kg",
  "originalPrice": 15.99,
  "promotionalPrice": 12.99,
  "costPrice": 8.50,
  "priority": 1,
  "status": 1,
  "updatedBy": "admin",
  "controlDate": "2024-01-15"
}

###

### 8. Atualizar produto no estoque (campos opcionais)
PUT {{host}}/stock-products/1
Content-Type: application/json

{
  "promotionalPrice": 10.99,
  "priority": 2,
  "status": 2,
  "updatedBy": "admin"
}

###

### 9. Remover produto do estoque
DELETE {{host}}/stock-products/1

###

### 10. Verificar se produto existe
HEAD {{host}}/stock-products/1

###

### Status Enum Values:
### 1 = Ativo
### 2 = Vendido  
### 3 = Expirado

### Priority Levels:
### 1 = Alta prioridade (produtos próximos ao vencimento)
### 2 = Média prioridade
### 3 = Baixa prioridade